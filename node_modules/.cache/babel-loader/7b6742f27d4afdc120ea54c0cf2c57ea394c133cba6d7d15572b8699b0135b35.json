{"ast":null,"code":"/**\n * Simple Prim's Algorithm for Maze Generation\n */\n\n/**\n * Generates a maze using Prim's algorithm\n * @param {number} gridSize - The size of the grid\n * @param {Function} updateWalls - Callback to update UI with current walls\n * @param {Function} updateMazeGeneration - Callback to update UI with maze generation cells\n * @param {number} animationSpeed - Speed of animation in milliseconds\n * @returns {Object} - Results including final walls set and generation stats\n */\nexport const generateMazeWithPrims = async (gridSize, updateWalls, updateMazeGeneration, animationSpeed = 100) => {\n  const walls = new Set();\n  const visited = new Set();\n\n  // Create border walls\n  for (let row = 0; row < gridSize; row++) {\n    for (let col = 0; col < gridSize; col++) {\n      if (row === 0 || row === gridSize - 1 || col === 0 || col === gridSize - 1) {\n        walls.add(`${row}-${col}`);\n      }\n    }\n  }\n\n  // Add some random interior walls for demonstration\n  for (let i = 0; i < gridSize * 2; i++) {\n    const row = 1 + Math.floor(Math.random() * (gridSize - 2));\n    const col = 1 + Math.floor(Math.random() * (gridSize - 2));\n    walls.add(`${row}-${col}`);\n  }\n  updateWalls(new Set(walls));\n  return {\n    walls: new Set(walls),\n    generationSteps: walls.size,\n    visitedCells: gridSize * gridSize - walls.size\n  };\n};\nexport default generateMazeWithPrims;","map":{"version":3,"names":["generateMazeWithPrims","gridSize","updateWalls","updateMazeGeneration","animationSpeed","walls","Set","visited","row","col","add","i","Math","floor","random","generationSteps","size","visitedCells"],"sources":["E:/maze_analyser/src/algorithms/primsAlgorithm.js"],"sourcesContent":["/**\n * Simple Prim's Algorithm for Maze Generation\n */\n\n/**\n * Generates a maze using Prim's algorithm\n * @param {number} gridSize - The size of the grid\n * @param {Function} updateWalls - Callback to update UI with current walls\n * @param {Function} updateMazeGeneration - Callback to update UI with maze generation cells\n * @param {number} animationSpeed - Speed of animation in milliseconds\n * @returns {Object} - Results including final walls set and generation stats\n */\nexport const generateMazeWithPrims = async (\n  gridSize,\n  updateWalls,\n  updateMazeGeneration,\n  animationSpeed = 100\n) => {\n  const walls = new Set();\n  const visited = new Set();\n  \n  // Create border walls\n  for (let row = 0; row < gridSize; row++) {\n    for (let col = 0; col < gridSize; col++) {\n      if (row === 0 || row === gridSize - 1 || col === 0 || col === gridSize - 1) {\n        walls.add(`${row}-${col}`);\n      }\n    }\n  }\n  \n  // Add some random interior walls for demonstration\n  for (let i = 0; i < gridSize * 2; i++) {\n    const row = 1 + Math.floor(Math.random() * (gridSize - 2));\n    const col = 1 + Math.floor(Math.random() * (gridSize - 2));\n    walls.add(`${row}-${col}`);\n  }\n  \n  updateWalls(new Set(walls));\n  \n  return {\n    walls: new Set(walls),\n    generationSteps: walls.size,\n    visitedCells: gridSize * gridSize - walls.size\n  };\n};\n\nexport default generateMazeWithPrims;\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMA,qBAAqB,GAAG,MAAAA,CACnCC,QAAQ,EACRC,WAAW,EACXC,oBAAoB,EACpBC,cAAc,GAAG,GAAG,KACjB;EACH,MAAMC,KAAK,GAAG,IAAIC,GAAG,CAAC,CAAC;EACvB,MAAMC,OAAO,GAAG,IAAID,GAAG,CAAC,CAAC;;EAEzB;EACA,KAAK,IAAIE,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAGP,QAAQ,EAAEO,GAAG,EAAE,EAAE;IACvC,KAAK,IAAIC,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAGR,QAAQ,EAAEQ,GAAG,EAAE,EAAE;MACvC,IAAID,GAAG,KAAK,CAAC,IAAIA,GAAG,KAAKP,QAAQ,GAAG,CAAC,IAAIQ,GAAG,KAAK,CAAC,IAAIA,GAAG,KAAKR,QAAQ,GAAG,CAAC,EAAE;QAC1EI,KAAK,CAACK,GAAG,CAAC,GAAGF,GAAG,IAAIC,GAAG,EAAE,CAAC;MAC5B;IACF;EACF;;EAEA;EACA,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGV,QAAQ,GAAG,CAAC,EAAEU,CAAC,EAAE,EAAE;IACrC,MAAMH,GAAG,GAAG,CAAC,GAAGI,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,IAAIb,QAAQ,GAAG,CAAC,CAAC,CAAC;IAC1D,MAAMQ,GAAG,GAAG,CAAC,GAAGG,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,IAAIb,QAAQ,GAAG,CAAC,CAAC,CAAC;IAC1DI,KAAK,CAACK,GAAG,CAAC,GAAGF,GAAG,IAAIC,GAAG,EAAE,CAAC;EAC5B;EAEAP,WAAW,CAAC,IAAII,GAAG,CAACD,KAAK,CAAC,CAAC;EAE3B,OAAO;IACLA,KAAK,EAAE,IAAIC,GAAG,CAACD,KAAK,CAAC;IACrBU,eAAe,EAAEV,KAAK,CAACW,IAAI;IAC3BC,YAAY,EAAEhB,QAAQ,GAAGA,QAAQ,GAAGI,KAAK,CAACW;EAC5C,CAAC;AACH,CAAC;AAED,eAAehB,qBAAqB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}